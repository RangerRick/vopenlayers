<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.vaadin.vol</groupId>
	<artifactId>openlayers-wrapper</artifactId>
	<version>1.2.1-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>true</addClasspath>
							<!-- Implementation-Title and Implementation-Version come from the 
								POM by default -->
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<!-- Package format version - do not change -->
							<Vaadin-Package-Version>1</Vaadin-Package-Version>

							<!-- Add-on specific fields to update -->

							<!-- Implementation-Title and Implementation-Version come from the 
								POM by default -->
							<Implementation-Title>OpenLayers Wrapper</Implementation-Title>

							<!-- Comma-separated list of widgetsets in the package -->
							<Vaadin-Widgetsets>org.vaadin.vol.VolWidgetsetWithHostedScript</Vaadin-Widgetsets>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>



			<!-- Compile custom GWT components or widget dependencies with the GWT 
				compiler -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.3.0-1</version>
				<configuration>
					<webappDirectory>${project.build.directory}/testwebapp/VAADIN/widgetsets</webappDirectory>
					<extraJvmArgs>-Xmx1024M -Xss1024k</extraJvmArgs>
					<hostedWebapp>${project.build.directory}/testwebapp</hostedWebapp>
					<noServer>true</noServer>
					<module>org.vaadin.vol.demo.VolExampleAppWidgetset</module>
					<runTarget>http://localhost:9998/</runTarget>
					<draftCompile>true</draftCompile>
					<style>PRETTY</style>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- This creates a zip file of jar and sources jar. Makes sources available 
				to maven users automatically?! We could also use this to package required 
				dependecies for those poor developer souls that still dont know how to use 
				a build system that supports transient dependencies... -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<finalName>openlayers-wrapper-${project.version}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
			
			<!-- 
				This is use for running the demo from maven. 
				Useful for calls like that:
				mvn clean compile test-compile gwt:compile exec:java
			 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>                        
                    			</execution>
		                </executions>
				<configuration>
					<mainClass>org.vaadin.vol.VolTestServer</mainClass>
					<classpathScope>test</classpathScope>
				</configuration>
			</plugin>
		</plugins>

		<!-- This is needed for the sources required by the GWT compiler to be 
			included in the produced JARs -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/test/java</directory>
			</resource>
		</resources>
	</build>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Maven 2 Repository</name>
			<url>http://download.java.net/maven/2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>codehaus-snapshots</id>
			<url>http://nexus.codehaus.org/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>


	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>6.7.4</version>
		</dependency>
		<!-- This is also used by gwt-maven-plugin to deduce GWT version number. -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>2.3.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>7.2.2.v20101205</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>7.2.2.v20101205</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<version>7.2.2.v20101205</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
